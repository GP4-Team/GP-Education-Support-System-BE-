version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: ess_postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_DB=ESSCentral
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ess_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: ess_redis
    command: redis-server --requirepass Redis123! --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ess_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../
      dockerfile: src/Presentation/ESS.API/Dockerfile
    container_name: ess_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=ESSCentral;Username=admin;Password=admin123
      - Redis__Configuration=redis:6379,password=Redis123!
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ess_network

networks:
  ess_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: